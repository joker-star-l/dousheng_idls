// Code generated by Kitex v0.4.4. DO NOT EDIT.

package message

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	api "github.com/joker-star-l/dousheng_idls/message/kitex_gen/api"
)

func serviceInfo() *kitex.ServiceInfo {
	return messageServiceInfo
}

var messageServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "Message"
	handlerType := (*api.Message)(nil)
	methods := map[string]kitex.MethodInfo{
		"latestMessage": kitex.NewMethodInfo(latestMessageHandler, newMessageLatestMessageArgs, newMessageLatestMessageResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "api",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.4",
		Extra:           extra,
	}
	return svcInfo
}

func latestMessageHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*api.MessageLatestMessageArgs)
	realResult := result.(*api.MessageLatestMessageResult)
	success, err := handler.(api.Message).LatestMessage(ctx, realArg.UserId, realArg.FriendId)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newMessageLatestMessageArgs() interface{} {
	return api.NewMessageLatestMessageArgs()
}

func newMessageLatestMessageResult() interface{} {
	return api.NewMessageLatestMessageResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) LatestMessage(ctx context.Context, userId int64, friendId int64) (r *api.LatestMessageResponse, err error) {
	var _args api.MessageLatestMessageArgs
	_args.UserId = userId
	_args.FriendId = friendId
	var _result api.MessageLatestMessageResult
	if err = p.c.Call(ctx, "latestMessage", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
